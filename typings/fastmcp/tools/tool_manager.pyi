"""
This type stub file was generated by pyright.
"""

from collections.abc import Callable
from typing import Any, TYPE_CHECKING
from mcp.types import ToolAnnotations
from fastmcp.settings import DuplicateBehavior
from fastmcp.tools.tool import Tool, ToolResult
from fastmcp.server.server import MountedServer

if TYPE_CHECKING:
    ...
logger = ...
class ToolManager:
    """Manages FastMCP tools."""
    def __init__(self, duplicate_behavior: DuplicateBehavior | None = ..., mask_error_details: bool | None = ...) -> None:
        ...
    
    def mount(self, server: MountedServer) -> None:
        """Adds a mounted server as a source for tools."""
        ...
    
    async def has_tool(self, key: str) -> bool:
        """Check if a tool exists."""
        ...
    
    async def get_tool(self, key: str) -> Tool:
        """Get tool by key."""
        ...
    
    async def get_tools(self) -> dict[str, Tool]:
        """
        Gets the complete, unfiltered inventory of all tools.
        """
        ...
    
    async def list_tools(self) -> list[Tool]:
        """
        Lists all tools, applying protocol filtering.
        """
        ...
    
    def add_tool_from_fn(self, fn: Callable[..., Any], name: str | None = ..., description: str | None = ..., tags: set[str] | None = ..., annotations: ToolAnnotations | None = ..., serializer: Callable[[Any], str] | None = ..., exclude_args: list[str] | None = ...) -> Tool:
        """Add a tool to the server."""
        ...
    
    def add_tool(self, tool: Tool) -> Tool:
        """Register a tool with the server."""
        ...
    
    def remove_tool(self, key: str) -> None:
        """Remove a tool from the server.

        Args:
            key: The key of the tool to remove

        Raises:
            NotFoundError: If the tool is not found
        """
        ...
    
    async def call_tool(self, key: str, arguments: dict[str, Any]) -> ToolResult:
        """
        Internal API for servers: Finds and calls a tool, respecting the
        filtered protocol path.
        """
        ...
    


