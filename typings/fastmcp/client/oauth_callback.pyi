"""
This type stub file was generated by pyright.
"""

import asyncio
from dataclasses import dataclass
from uvicorn import Server

"""
OAuth callback server for handling authorization code flows.

This module provides a reusable callback server that can handle OAuth redirects
and display styled responses to users.
"""
logger = ...
def create_callback_html(message: str, is_success: bool = ..., title: str = ..., server_url: str | None = ...) -> str:
    """Create a styled HTML response for OAuth callbacks."""
    ...

@dataclass
class CallbackResponse:
    code: str | None = ...
    state: str | None = ...
    error: str | None = ...
    error_description: str | None = ...
    @classmethod
    def from_dict(cls, data: dict[str, str]) -> CallbackResponse:
        ...
    
    def to_dict(self) -> dict[str, str]:
        ...
    


def create_oauth_callback_server(port: int, callback_path: str = ..., server_url: str | None = ..., response_future: asyncio.Future | None = ...) -> Server:
    """
    Create an OAuth callback server.

    Args:
        port: The port to run the server on
        callback_path: The path to listen for OAuth redirects on
        server_url: Optional server URL to display in success messages
        response_future: Optional future to resolve when OAuth callback is received

    Returns:
        Configured uvicorn Server instance (not yet running)
    """
    ...

if __name__ == "__main__":
    port = ...
    server = ...
