"""
This type stub file was generated by pyright.
"""

from typing import ParamSpec, TYPE_CHECKING, TypeVar
from starlette.requests import Request
from fastmcp.server.context import Context

if TYPE_CHECKING:
    ...
P = ParamSpec('P')
R = TypeVar('R')
__all__ = ['get_context', 'get_http_request', 'get_http_headers', 'get_access_token', 'AccessToken']
def get_context() -> Context:
    ...

def get_http_request() -> Request:
    ...

def get_http_headers(include_all: bool = ...) -> dict[str, str]:
    """
    Extract headers from the current HTTP request if available.

    Never raises an exception, even if there is no active HTTP request (in which case
    an empty dict is returned).

    By default, strips problematic headers like `content-length` that cause issues if forwarded to downstream clients.
    If `include_all` is True, all headers are returned.
    """
    ...

