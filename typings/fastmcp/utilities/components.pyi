

from typing import Annotated, Any, Self, TypeVar

from fastmcp.utilities.types import FastMCPBaseModel
from pydantic import BeforeValidator

T = TypeVar("T")

class FastMCPComponent(FastMCPBaseModel):


    name: str = ...
    title: str | None = ...
    description: str | None = ...
    tags: Annotated[set[str], BeforeValidator(_convert_set_default_none)] = ...
    enabled: bool = ...
    _key: str | None = ...
    def __init__(self, *, key: str | None = ..., **kwargs: Any) -> None: ...
    @property
    def key(self) -> str:
        ...

    def with_key(self, key: str) -> Self: ...
    def __eq__(self, other: object) -> bool: ...
    def enable(self) -> None:
        ...

    def disable(self) -> None:
        ...

    def copy(self) -> Self:
        ...

class MirroredComponent(FastMCPComponent):


    _mirrored: bool = ...
    def __init__(self, *, _mirrored: bool = ..., **kwargs: Any) -> None: ...
    def enable(self) -> None:
        ...

    def disable(self) -> None:
        ...

    def copy(self) -> Self:
        ...
