"""
This type stub file was generated by pyright.
"""

from onnxruntime.capi._pybind_state import ExecutionMode, ExecutionOrder, GraphOptimizationLevel, LoraAdapter, ModelMetadata, NodeArg, OrtAllocatorType, OrtArenaCfg, OrtMemType, OrtMemoryInfo, OrtSparseFormat, RunOptions, SessionIOBinding, SessionOptions, create_and_register_allocator, create_and_register_allocator_v2, disable_telemetry_events, enable_telemetry_events, get_all_providers, get_available_providers, get_build_info, get_device, get_version_string, has_collective_ops, set_default_logger_severity, set_default_logger_verbosity, set_seed
from onnxruntime.capi import onnxruntime_validation
from onnxruntime.capi.onnxruntime_inference_collection import AdapterFormat, IOBinding, InferenceSession, OrtDevice, OrtValue, SparseTensor
from . import experimental

"""
ONNX Runtime is a performance-focused scoring engine for Open Neural Network Exchange (ONNX) models.
For more information on ONNX Runtime, please see `aka.ms/onnxruntime <https://aka.ms/onnxruntime/>`_
or the `Github project <https://github.com/microsoft/onnxruntime/>`_.
"""
__version__ = ...
__author__ = ...
import_capi_exception = ...
if import_capi_exception:
    ...
if version:
    __version__ = ...
def print_debug_info(): # -> None:
    """Print information to help debugging."""
    ...

def preload_dlls(cuda: bool = ..., cudnn: bool = ..., msvc: bool = ..., directory=...): # -> None:
    """Preload CUDA 12.x and cuDNN 9.x DLLs in Windows or Linux, and MSVC runtime DLLs in Windows.

       When the installed PyTorch is compatible (using same major version of CUDA and cuDNN),
       there is no need to call this function if `import torch` is done before `import onnxruntime`.

    Args:
        cuda (bool, optional): enable loading CUDA DLLs. Defaults to True.
        cudnn (bool, optional): enable loading cuDNN DLLs. Defaults to True.
        msvc (bool, optional): enable loading MSVC DLLs in Windows. Defaults to True.
        directory(str, optional): a directory contains CUDA or cuDNN DLLs. It can be an absolute path,
           or a path relative to the directory of this file.
           If directory is None (default value), the search order: the lib directory of compatible PyTorch in Windows,
            nvidia site packages, default DLL loading paths.
           If directory is empty string (""), the search order: nvidia site packages, default DLL loading paths.
           If directory is a path, the search order: the directory, default DLL loading paths.
    """
    ...

