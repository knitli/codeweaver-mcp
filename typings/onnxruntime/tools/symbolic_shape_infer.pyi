"""
This type stub file was generated by pyright.
"""

logger = ...
def get_attribute(node, attr_name, default_value=...): # -> None:
    ...

def get_dim_from_proto(dim): # -> Any | None:
    ...

def is_sequence(type_proto):
    ...

def get_shape_from_type_proto(type_proto): # -> list[Any | None] | None:
    ...

def get_elem_type_from_type_proto(type_proto):
    ...

def get_shape_from_value_info(vi): # -> list[Any | None] | None:
    ...

def make_named_value_info(name):
    ...

def get_shape_from_sympy_shape(sympy_shape): # -> list[int | str | None]:
    ...

def is_literal(dim): # -> bool:
    ...

def handle_negative_axis(axis, rank):
    ...

def get_opset(mp, domain=...): # -> None:
    ...

def as_scalar(x): # -> Any:
    ...

def as_list(x, keep_none): # -> list[Any] | None:
    ...

def sympy_reduce_product(x): # -> One | NegativeOne | Zero | Integer:
    ...

class SymbolicShapeInference:
    def __init__(self, int_max, auto_merge, guess_output_rank, verbose, prefix=...) -> None:
        ...
    
    @staticmethod
    def infer_shapes(in_mp, int_max=..., auto_merge=..., guess_output_rank=..., verbose=...): # -> None:
        ...
    


def parse_arguments(): # -> Namespace:
    ...

if __name__ == "__main__":
    args = ...
    out_mp = ...
