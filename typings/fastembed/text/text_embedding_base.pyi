"""
This type stub file was generated by pyright.
"""

from typing import Any, Iterable, Optional, Union
from fastembed.common.model_description import DenseModelDescription
from fastembed.common.types import NumpyArray
from fastembed.common.model_management import ModelManagement

class TextEmbeddingBase(ModelManagement[DenseModelDescription]):
    def __init__(self, model_name: str, cache_dir: Optional[str] = ..., threads: Optional[int] = ..., **kwargs: Any) -> None:
        ...
    
    def embed(self, documents: Union[str, Iterable[str]], batch_size: int = ..., parallel: Optional[int] = ..., **kwargs: Any) -> Iterable[NumpyArray]:
        ...
    
    def passage_embed(self, texts: Iterable[str], **kwargs: Any) -> Iterable[NumpyArray]:
        """
        Embeds a list of text passages into a list of embeddings.

        Args:
            texts (Iterable[str]): The list of texts to embed.
            **kwargs: Additional keyword argument to pass to the embed method.

        Yields:
            Iterable[NumpyArray]: The embeddings.
        """
        ...
    
    def query_embed(self, query: Union[str, Iterable[str]], **kwargs: Any) -> Iterable[NumpyArray]:
        """
        Embeds queries

        Args:
            query (Union[str, Iterable[str]]): The query to embed, or an iterable e.g. list of queries.

        Returns:
            Iterable[NumpyArray]: The embeddings.
        """
        ...
    
    @classmethod
    def get_embedding_size(cls, model_name: str) -> int:
        """Returns embedding size of the passed model."""
        ...
    
    @property
    def embedding_size(self) -> int:
        """Returns embedding size for the current model"""
        ...
    


